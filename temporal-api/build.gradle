plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'

	// Temporal starter
	implementation "io.temporal:temporal-spring-boot-starter-alpha:1.23.1"

	// MinIO Client
	implementation 'io.minio:minio:8.5.9'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
	implementation 'io.temporal:temporal-sdk:1.23.0'
	testImplementation 'io.temporal:temporal-testing:1.23.0'
}

jar {
	manifest {
		attributes(
				'Main-Class': 'com.example.docker.Main'
		)
	}
	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
	archiveBaseName = 'docker-file-processor'
	archiveVersion = '0.0.1-SNAPSHOT'
}

test {
	useJUnitPlatform()
	jvmArgs("--enable-preview")
}

tasks.named('test') {
	useJUnitPlatform()
}
